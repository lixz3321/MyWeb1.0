<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
                        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
                        http://www.springframework.org/schema/context  
                        http://www.springframework.org/schema/context/spring-context-3.1.xsd  
                        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
                        http://www.springframework.org/schema/mvc  
                        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd">
	<!-- 自动扫描以下包的各种注解 -->
	<!-- <context:component-scan base-package="com" /> --><!-- 会扫描包含Service,Component,Repository,Controller注解修饰的类(将带有注解的类 纳入spring容器管理 ) -->
	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:resource/jdbc.properties" /><!-- 注意路径写法，虽然是与当前配置文同包，但也得加包名 -->
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${username}" />
		<property name="password" value="${password}" />
	</bean>

	<!-- spring和MyBatis完美整合，指明mybatis配置文件和映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
	    <property name="configLocation" value="classpath:resource/mybatis.xml"></property>  
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件(该映射文件也可以在mybatis.xml里配置，不在这里配置) -->
		<property name="mapperLocations" value="classpath:resource/mapper/*.xml"></property>
	</bean>

     <!-- 配置DAO接口所在包名，spring会扫描其下的映射接口，并实例化出mapper(如果没有将不能@AutoWired自动注入Mapper接口) -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">  
     <property name="basePackage" value="com.Dao"/>  
     <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"/>  
    </bean>

       
	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
		<!-- 启用事务 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
		    <tx:method name="insert*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="save*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="del*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="update*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="upload*" propagation="REQUIRED" rollback-for="java.lang.Exception" />
			<tx:method name="query*" read-only="true" />
			<tx:method name="find*" read-only="true" />
		</tx:attributes>
	</tx:advice>

</beans>